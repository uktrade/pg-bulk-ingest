name: Tests
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version:
          - "3.7.7"
          - "3.8.2"
          - "3.9.0"
          - "3.10.0"
          - "3.11.1"
          - "3.12.0"
          - "3.13.0"
        postgresql-version:
          - "9.6"
          - "10.0"
          - "11.0"
          - "12.0"
          - "13.0"
          - "14.0"
          - "15.0"
          - "16.0"
        ci-extras:
          - ci-sqlalchemy1-without-pg-arrow
          - ci-sqlalchemy1-with-pg-arrow
          - ci-sqlalchemy2-without-pg-arrow
          - ci-sqlalchemy2-with-pg-arrow
        exclude:
          # adbc-driver-postgresql 1.6.0 supports Python 3.9.0 onwards
          - python-version: "3.7.7"
            ci-extras: ci-sqlalchemy1-with-pg-arrow
          - python-version: "3.7.7"
            ci-extras: ci-sqlalchemy2-with-pg-arrow
          - python-version: "3.8.2"
            ci-extras: ci-sqlalchemy1-with-pg-arrow
          - python-version: "3.8.2"
            ci-extras: ci-sqlalchemy2-with-pg-arrow
          # ROLLBACK AND CHAIN is used by ADBC but not supported until PostgreSQL 13.0
          - postgresql-version: "9.6"
            ci-extras: ci-sqlalchemy1-with-pg-arrow
          - postgresql-version: "9.6"
            ci-extras: ci-sqlalchemy2-with-pg-arrow
          - postgresql-version: "10.0"
            ci-extras: ci-sqlalchemy1-with-pg-arrow
          - postgresql-version: "10.0"
            ci-extras: ci-sqlalchemy2-with-pg-arrow
          - postgresql-version: "11.0"
            ci-extras: ci-sqlalchemy1-with-pg-arrow
          - postgresql-version: "11.0"
            ci-extras: ci-sqlalchemy2-with-pg-arrow
          - postgresql-version: "12.0"
            ci-extras: ci-sqlalchemy1-with-pg-arrow
          - postgresql-version: "12.0"
            ci-extras: ci-sqlalchemy2-with-pg-arrow
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          # The version of uv itself is pinned, which allows us to install older Python. Suspect
          # that eventually to install newer Python, will need to have the version of uv specified
          # in the matrix
          version: "0.6.17"
          python-version: ${{ matrix.python-version }}
          activate-environment: true
      - name: "Run PostgreSQL"
        run: |
          ./start-services.sh ${{ matrix.postgresql-version }}
      - name: "Install package and python dependencies"
        run: |
          uv pip install --upgrade pip
          CC=clang uv pip install .[dev,ci,${{ matrix.ci-extras }}]
      - name: "Wait for PostgreSQL"
        run: "timeout 60 bash -c 'until echo > /dev/tcp/127.0.0.1/5432; do sleep 5; done'"
      - name: "Run Type Checking"
        run: |
          mypy pg_bulk_ingest
      - name: "Test"
        run: |
          python --version
          PG_VERSION=${{ matrix.postgresql-version }} pytest --cov
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
